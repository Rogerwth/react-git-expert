{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleClick","e","preventDefault","trim","cats","onSubmit","type","value","onChange","target","handleInput","onClick","getGifs","category","a","url","encodeURI","fetch","then","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iNA+BeA,EA5BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMMC,EAAc,SAAAC,GAChBA,EAAEC,iBACEJ,EAAWK,QAAQP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,QAGjE,OACI,uBAAMC,SAAUL,EAAhB,UACI,uBACIM,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAP,GAAC,OAdH,SAAAA,GAChBF,EAAcE,EAAEQ,OAAOF,OAaAG,CAAYT,MAE/B,wBAAQU,QAASX,EAAjB,yB,+BCtBCY,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,4DACJ,mCACD,GACRC,EAHa,uDACJ,mCADI,kBAEL,GAFK,cAGoEC,UACnFH,IAJe,SAOII,MAAMF,GAAKG,MAAK,SAAAC,GACnC,OAAOA,EAASC,UARD,uBAOXC,EAPW,EAOXA,KAIFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QAfvB,kBAmBZO,GAnBY,2CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBd,EAAiB,EAAjBA,IAAKW,EAAY,EAAZA,MACxB,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKN,IACpB,4BAAIA,QCeDO,EAjBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SACf,ECFwB,SAAAA,GACxB,MAA0BhB,mBAAS,CAC/B8B,OAAQ,GACRO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNzB,EAAQC,GAAUK,MAAK,SAAAS,GACnBS,EAAS,CACLT,OAAQA,EACRO,SAAS,SAGlB,CAACrB,IAEGsB,EDbqBG,CAAazB,GAAjCc,EAAR,EAAQA,OAER,OAFA,EAAgBO,QAGZ,mBAAGJ,UAAU,mCAAb,yBAEA,qCACI,6BAAKjB,IACL,qBAAKiB,UAAU,8CAAf,SACKH,EAAOJ,KAAI,SAAAC,GACR,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOlCc,EAjBM,WACjB,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK4C,EAAWjB,KAAI,SAAAV,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCRzC4B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.a8aa598a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInput = e => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n        if (inputValue.trim()) setCategories(cats => [inputValue, ...cats]);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleClick}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={e => handleInput(e)}\r\n            />\r\n            <button onClick={handleClick}>Agregar</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async category => {\r\n    const apiKey = 'cglCJaTZSgn4L65r6Gdw9aRk1DTShH1i';\r\n    const limit = 10;\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&limit=${limit}&q=${encodeURI(\r\n        category\r\n    )}`;\r\n\r\n    const { data } = await fetch(url).then(response => {\r\n        return response.json();\r\n    });\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ url, title }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const { images, loading } = useFetchGifs(category);\r\n\r\n    return loading ? (\r\n        <p className=\"animate__animated animate__flash\">Cargando...</p>\r\n    ) : (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <div className=\"card-grid animate__animated animate__fadeIn\">\r\n                {images.map(img => {\r\n                    return <GifGridItem key={img.id} {...img} />;\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = category => {\r\n    const [state, setstate] = useState({\r\n        images: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(images => {\r\n            setstate({\r\n                images: images,\r\n                loading: false,\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {categories.map(category => {\r\n                    return <GifGrid key={category} category={category} />;\r\n                })}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}